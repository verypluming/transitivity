#!/bin/bash

# script to analyze the number of sentences generated by cfg_prop
# Set the number of proper names
number_of_np=$1

# Set the total number of sentences
total=$2

dir="base_prop"
semantics="cfg_prop.pl"

IFS=$'\n'

function str_to_list(){
 str=$1
 cat $str \
   | sed -e 's/ $//g' \
   | sed 's/ /,/g' \
   | sed -e 's/^/[/g' \
   | sed -e 's/$/]/g'
}

if [ ! -f base_prop/all.formulas ]; then
  for file in base_prop/rec*.scheme; do
    basename=${file##*/}
    depth=$(echo $basename | cut -b 4)
    str_to_list $file | \
    while read line; do
      swipl -s ${semantics} -g "semparse(${depth},${line})" -t halt --quiet \
      >> base_prop/all.formulas
    done
  done
fi

# $ less base_prop/all.formulas
# (formula, depth, connectives, atoms)
# walk(np)        0       0       1
# run(np) 0       0       1

if [ ! -f base_prop/all.scheme ]; then
  for file in base_prop/rec*.scheme; do
    cat $file >> base_prop/all.scheme
  done
fi

cat base_prop/all.scheme | while read line; do num=$(echo $line | sed -e 's/np/\n/g' | wc -l); echo $((${num} - 1)); done > base_prop/np

wc -l base_prop/all.scheme
wc -l base_prop/np
wc -l base_prop/all.formulas

paste base_prop/all.scheme base_prop/np > base_prop/tmpnp

# $ less prop_base/tmpnp
# (scheme, number of np)
# np walked       1
# np ran  1
# np swam         1

paste base_prop/tmpnp base_prop/all.formulas > base_prop/sum.txt

# $ less prop_base/sum.txt
# sentence scheme (1), number of np (2), formula (3), depth (4), number of connectives (5), number of atoms (6)
# np walked       1       walk(np)        0       0       1
# np ran  1       run(np) 0       0       1
# np swam         1       swim(np)        0       0       1
# np slept        1       sleep(np)       0       0       1

# Create depth files
cat base_prop/sum.txt | awk -F'\t' '{scheme=$1;dep=$4;if(dep > 0) print scheme > "base_prop/depth"dep".scheme"}'

cat base_prop/sum.txt | \
  awk -F'\t' '{print $4" "$2" "$6}' | sort | uniq -c | \
  awk -F' ' '{print $2" "$3" "$1 * 2}'  \
  > base_prop/uniq

# cat base_prop/sum.txt | awk -F'\t' '{print $4" "$2" "$6}' | sort | uniq -c > base_prop/uniq1
# cat base_prop/uniq1 | awk -F' ' '{print $2" "$3" "$1 * 2}'  > base_prop/uniq2

# $ less base_prop/uniq1
# (number, depth, nps, atoms)
# 10 0 1 1
# 10 0 2 1

# $ less base_prop/uniq2
# depth, number of np, count
# 0 1 20
# 0 2 20
# 1 1 40
